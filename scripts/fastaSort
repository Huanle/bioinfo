#!/usr/bin/env perl

use strict;
use warnings;

use Bio::DB::Fasta;
use Bio::SeqIO;
use Sort::Naturally;  # provides nsort

my $remove_index = 0;

if (! scalar(@ARGV)) {
    print STDERR "USAGE:  $0  file.fa  >  output.fa\n";
    print STDERR "\n";
    print STDERR "Sorts file.fa according to natural sort on scaffold names and writes output\n";
    print STDERR "to stdout.  Leaves file.fa.index in place (created by Bio::DB::Fasta).\n";
    print STDERR "\n";
    exit 1;
}


my $f = shift @ARGV;

my $db = Bio::DB::Fasta->new($f);

my $OUT = Bio::SeqIO->new(-fh => \*STDOUT, -format => 'fasta');

my @sorted_ids = nsort($db->get_all_primary_ids());

$OUT->write_seq($db->get_Seq_by_id($_)) foreach @sorted_ids;

if ($remove_index) {
    my $idx = "$f.index";
    unlink $idx or die "could not remove index '$idx': $!";
}
